# To add with init
#DIR_SCRIPTS=...
#FILE_UNIQUE_FASTA_HAIRPIN=...
#FILE_FASTA_HAIRPIN=...
#FILE_MATURE_FASTA_HAIRPIN=...

# Prepare variables
URL_MIRBASE=ftp://mirbase.org/pub/mirbase/CURRENT/database_files
DIR_RESULTS_HAIRPIN=HairpinsAlignment
DIR_REFERENCE_HAIRPIN=$(DIR_RESULTS_HAIRPIN)/Reference
DIR_ALIGNMENT_HAIRPIN=$(DIR_RESULTS_HAIRPIN)/Alignment
DIR_HTML_HAIRPIN=$(DIR_RESULTS_HAIRPIN)/html-report

BASE_UNIQUE_FASTA_HAIRPIN=$(basename $(notdir $(FILE_UNIQUE_FASTA_HAIRPIN)))
FILE_MATURE_HAIRPIN=$(DIR_RESULTS_HAIRPIN)/mirna_mature.txt
FILE_MIRNA_HAIRPIN=$(DIR_RESULTS_HAIRPIN)/mirna.txt
FILE_PREMATURE_HAIRPIN=$(DIR_RESULTS_HAIRPIN)/mirna_pre_mature.txt

TOOL_BLASTDB=$(shell which makeblastdb)
TOOL_BLASTN=$(shell which blastn)
TOOLS_ALIGNMENT=$(DIR_SCRIPTS)/Alignment-Tools/Alignment-Tools
GCC=$(shell which g++)
TOOL_ALIGN=$(DIR_SCRIPTS)/Utility/miRNA_align

TARGET_PAIRS_HAIRPIN=$(DIR_RESULTS_HAIRPIN)/mirna_pairs.txt
TARGET_UNIQUE_FASTA_HAIRPIN=$(DIR_RESULTS_HAIRPIN)/$(BASE_UNIQUE_FASTA_HAIRPIN)_unique.fasta
TARGET_FASTA_HAIRPIN=$(DIR_REFERENCE_HAIRPIN)/$(notdir $(FILE_FASTA_HAIRPIN))
TARGET_MATURE_FASTA_HAIRPIN=$(DIR_REFERENCE_HAIRPIN)/$(notdir $(FILE_MATURE_FASTA_HAIRPIN))
TARGET_BLAST_HAIRPIN=$(DIR_RESULTS_HAIRPIN)/$(BASE_UNIQUE_FASTA_HAIRPIN)_hits.txt
TARGET_HTML_HAIRPIN=$(DIR_RESULTS_HAIRPIN)/index.html

# Start the analysis
.PHONY: hairpin-alignment
hairpin-alignment: $(TARGET_PAIRS_HAIRPIN) $(TARGET_BLAST_HAIRPIN) $(TARGET_HTML_HAIRPIN)

$(TARGET_HTML_HAIRPIN): $(TOOL_ALIGN) $(TARGET_UNIQUE_FASTA_HAIRPIN) $(TARGET_FASTA_HAIRPIN) $(TARGET_MATURE_FASTA_HAIRPIN) $(TARGET_BLAST_HAIRPIN) $(TARGET_PAIRS_HAIRPIN)
	mkdir -p $(DIR_HTML_HAIRPIN)
	cd $(DIR_RESULTS_HAIRPIN); $< $(notdir $(TARGET_UNIQUE_FASTA_HAIRPIN)) Reference/$(notdir $(TARGET_FASTA_HAIRPIN)) Reference/$(notdir $(TARGET_MATURE_FASTA_HAIRPIN)) $(notdir $(TARGET_BLAST_HAIRPIN)) $(notdir $(TARGET_PAIRS_HAIRPIN))

$(TOOL_ALIGN): $(TOOL_ALIGN).cpp
	$(GCC) -O3 -Wall $< -o $@

$(TARGET_BLAST_HAIRPIN): $(TOOLS_ALIGNMENT) $(TARGET_UNIQUE_FASTA_HAIRPIN) $(TARGET_FASTA_HAIRPIN)
	mkdir -p $(DIR_ALIGNMENT_HAIRPIN)
	cd $(DIR_ALIGNMENT_HAIRPIN); $< init blastn ../$(notdir $(TARGET_UNIQUE_FASTA_HAIRPIN)) ../../reference/$(notdir $(TARGET_FASTA_HAIRPIN)) "-outfmt;6;-evalue;0.001;-word_size;4;-num_threads;8"
	$(MAKE) -C $(DIR_ALIGNMENT_HAIRPIN)
	ln -sf $(notdir $(DIR_ALIGNMENT_HAIRPIN))/$(BASE_UNIQUE_FASTA_HAIRPIN)_unique.out $@

$(TARGET_FASTA_HAIRPIN): $(FILE_FASTA_HAIRPIN)
	mkdir -p $(DIR_REFERENCE_HAIRPIN)
	ln -sf ../../$< $@

$(TARGET_MATURE_FASTA_HAIRPIN): $(FILE_MATURE_FASTA_HAIRPIN)
	mkdir -p $(DIR_REFERENCE_HAIRPIN)
	ln -sf ../../$< $@

$(TARGET_UNIQUE_FASTA_HAIRPIN): $(FILE_UNIQUE_FASTA_HAIRPIN)
	sed 's/ PP_//g;s/Count: //g' $< > $@

$(TARGET_PAIRS_HAIRPIN): $(FILE_MATURE_HAIRPIN) $(FILE_MIRNA_HAIRPIN) $(FILE_PREMATURE_HAIRPIN)
	$(DIR_SCRIPTS)/Utility/getpairs.py $^ > $@

$(FILE_PREMATURE_HAIRPIN): 
	cd $(DIR_RESULTS_HAIRPIN); wget $(URL_MIRBASE)/$(notdir $@).gz
	gunzip -d $@.gz

$(FILE_MATURE_HAIRPIN) $(FILE_MIRNA_HAIRPIN): 
	cd $(DIR_RESULTS_HAIRPIN); wget $(URL_MIRBASE)/$(notdir $@).gz
	gunzip -c $@.gz | grep hsa > $@
