# To add with init
#DIR_SCRIPTS=...
#MATCHED_ALL_FASTA_NOVEL=...
#BASE_RESULTS_NOVEL=...
#FILE_GENOME_NOVEL=...
#FILE_SOURCE_MATURE_NOVEL=...

# Prepare variables
DIR_FILTERING_NOVEL=RawSequenceFiltering
DIR_RESULTS_NOVEL=NovelDiscovery
DIR_FASTA_NOVEL=$(DIR_RESULTS_NOVEL)/Fasta
DIR_REFERENCE_NOVEL=$(DIR_RESULTS_NOVEL)/Reference
DIR_INTERMEDIATE_NOVEL=$(DIR_RESULTS_NOVEL)/Intermediate

FILE_TRIMMED_FASTA_NOVEL=$(DIR_FILTERING_NOVEL)/$(BASE_RESULTS_NOVEL)_trimmed.fasta

TOOL_BOWTIE_BUILD=$(shell which bowtie2-build)
TOOL_MIRDEEP2=$(shell which miRDeep2.pl)
TOOL_MAPPER=$(shell which mapper.pl)

# Prepare targets
TARGET_ALL_FASTA_NOVEL=$(DIR_FASTA_NOVEL)/$(BASE_RESULTS_NOVEL)_all.fasta
TARGET_TRIMMED_FASTA_NOVEL=$(DIR_FASTA_NOVEL)/$(BASE_RESULTS_NOVEL)_trimmed.fasta
TARGET_UNMATCHED_FASTA_NOVEL=$(DIR_RESULTS_NOVEL)/$(BASE_RESULTS_NOVEL)_unmatched.fasta
TARGET_MATURE_NOVEL=$(DIR_FASTA_NOVEL)/$(notdir $(FILE_SOURCE_MATURE_NOVEL))

TARGET_GENOME_NOVEL=$(DIR_REFERENCE_NOVEL)/$(notdir $(FILE_GENOME_NOVEL))
TARGETS_GENOME_INDEXES_NOVEL=$(basename $(TARGET_GENOME_NOVEL)).1.ebwt
TARGETS_GENOME_INDEXES_NOVEL+=$(basename $(TARGET_GENOME_NOVEL)).2.ebwt
TARGETS_GENOME_INDEXES_NOVEL+=$(basename $(TARGET_GENOME_NOVEL)).3.ebwt
TARGETS_GENOME_INDEXES_NOVEL+=$(basename $(TARGET_GENOME_NOVEL)).4.ebwt
TARGETS_GENOME_INDEXES_NOVEL+=$(basename $(TARGET_GENOME_NOVEL)).rev.1.ebwt
TARGETS_GENOME_INDEXES_NOVEL+=$(basename $(TARGET_GENOME_NOVEL)).rev.2.ebwt
BASE_GENOME_NOVEL=$(basename $(TARGET_GENOME_NOVEL))

TARGET_BED_NOVEL=$(DIR_RESULTS_NOVEL)/$(BASE_RESULTS_NOVEL)_NovelDiscovery.bed
TARGET_CSV_NOVEL=$(DIR_RESULTS_NOVEL)/$(BASE_RESULTS_NOVEL)_NovelDiscovery.csv
TARGET_HTML_NOVEL=$(DIR_RESULTS_NOVEL)/$(BASE_RESULTS_NOVEL)_NovelDiscovery.html
TARGETS_NOVEL=$(TARGET_BED_NOVEL) $(TARGET_CSV_NOVEL) $(TARGET_HTML_NOVEL)

TARGET_INTERMEDIATE_FASTA_NOVEL=$(DIR_INTERMEDIATE_NOVEL)/$(BASE_RESULTS_NOVEL)_intermediate.fasta
TARGET_INTERMEDIATE_ARF_NOVEL=$(DIR_INTERMEDIATE_NOVEL)/$(BASE_RESULTS_NOVEL)_intermediate.arf
TARGETS_INTERMEDIATE_NOVEL=$(TARGET_INTERMEDIATE_ARF_NOVEL) $(TARGET_INTERMEDIATE_FASTA_NOVEL)

# Prepare directory structure
$(shell mkdir -p $(DIR_RESULTS_NOVEL))

# mapper.pl test.fasta -c -l 18 -m -p Reference/hg19-all -s test_mapped.fasta -t test.arf -v -n
# miRDeep2.pl test_mapped.fasta Reference/hg19-all.fasta test.arf Fasta/mature.fa none none
#all: $(TARGETS_GENOME_INDEXES_NOVEL) $(TARGET_GENOME_NOVEL) $(TARGET_UNMATCHED_FASTA_NOVEL)

# Start analysis
.PHONY: novel
novel: $(TARGET_HTML_NOVEL)

$(TARGETS_NOVEL): $(TARGETS_INTERMEDIATE_NOVEL) $(TARGET_GENOME_NOVEL) $(TARGET_MATURE_NOVEL)
	rm -rf $(DIR_RESULTS_NOVEL)/result* $(DIR_RESULTS_NOVEL)/error* $(DIR_RESULTS_NOVEL)/dir_prepare* $(DIR_RESULTS_NOVEL)/pdfs_* $(DIR_RESULTS_NOVEL)/mirdeep_runs
	cd $(DIR_RESULTS_NOVEL); \
	$(TOOL_MIRDEEP2) $(notdir $(DIR_INTERMEDIATE_NOVEL))/$(notdir $(TARGET_INTERMEDIATE_FASTA_NOVEL)) \
	$(notdir $(DIR_REFERENCE_NOVEL))/$(notdir $(TARGET_GENOME_NOVEL)) \
	$(notdir $(DIR_INTERMEDIATE_NOVEL))/$(notdir $(TARGET_INTERMEDIATE_ARF_NOVEL)) \
	$(notdir $(DIR_FASTA_NOVEL))/$(notdir $(TARGET_MATURE_NOVEL)) none none
	mv $$(ls -t $(DIR_RESULTS_NOVEL)/result*.bed) $(TARGET_BED_NOVEL)
	mv $$(ls -t $(DIR_RESULTS_NOVEL)/result*.csv) $(TARGET_CSV_NOVEL)
	mv $$(ls -t $(DIR_RESULTS_NOVEL)/result*.html) $(TARGET_HTML_NOVEL)

$(TARGETS_INTERMEDIATE_NOVEL): $(TARGET_GENOME_NOVEL) $(TARGETS_GENOME_INDEXES_NOVEL) $(TARGET_UNMATCHED_FASTA_NOVEL)
	mkdir -p $(DIR_INTERMEDIATE_NOVEL)
	cd $(DIR_RESULTS_NOVEL); \
	$(TOOL_MAPPER) $(notdir $(TARGET_UNMATCHED_FASTA_NOVEL)) -c -l 18 -m -p \
	$(notdir $(DIR_REFERENCE_NOVEL))/$(notdir $(BASE_GENOME_NOVEL)) \
	-s $(notdir $(DIR_INTERMEDIATE_NOVEL))/$(notdir $(TARGET_INTERMEDIATE_FASTA_NOVEL)) \
	-t $(notdir $(DIR_INTERMEDIATE_NOVEL))/$(notdir $(TARGET_INTERMEDIATE_ARF_NOVEL)) -v -n

$(DIR_REFERENCE_NOVEL)/%.ebwt: $(dir $(FILE_GENOME_NOVEL))/%.ebwt
	mkdir -p $(DIR_REFERENCE_NOVEL)
	ln -sf ../../$< $@

$(TARGET_GENOME_NOVEL): $(FILE_GENOME_NOVEL)
	mkdir -p $(DIR_REFERENCE_NOVEL)
	ln -sf ../../$< $@

$(TARGET_UNMATCHED_FASTA_NOVEL): $(TARGET_ALL_FASTA_NOVEL) $(TARGET_TRIMMED_FASTA_NOVEL) $(DIR_SCRIPTS)/Utility/getFasta.py $(DIR_SCRIPTS)/Utility/UncollapseFasta.py
	grep '>' $(TARGET_ALL_FASTA_NOVEL) | awk '{print $$2}' \
	| $(DIR_SCRIPTS)/Utility/getFasta.py $(TARGET_TRIMMED_FASTA_NOVEL) not-match \
	| sed 's/> PP_/>PP/g;s/ Count: /_x/g' \
	> $@
#	| $(DIR_SCRIPTS)/Utility/UncollapseFasta.py mir \

$(TARGET_ALL_FASTA_NOVEL): $(MATCHED_ALL_FASTA_NOVEL)
	mkdir -p $(DIR_FASTA_NOVEL)
	ln -s ../../$< $@

$(TARGET_TRIMMED_FASTA_NOVEL): $(FILE_TRIMMED_FASTA_NOVEL)
	mkdir -p $(DIR_FASTA_NOVEL)
	ln -sf ../../$< $@

$(TARGET_MATURE_NOVEL): $(FILE_SOURCE_MATURE_NOVEL)
	mkdir -p $(DIR_FASTA_NOVEL)
	sed 's/ /_/g' $(FILE_SOURCE_MATURE_NOVEL) | grep -v '\-\-' > $@
