#!/bin/bash

Usage(){
	echo ""
	echo "This command will create the directory structure and prepare all the makefiles."
	echo "Input file should be in fastq format and be in a directory named \"data\" in the current directory."
	echo ""
	echo "Usage:"
	echo "    miRNA-Tools init [command]"
	echo ""
	echo "Available commands:"
	echo "    all (default)"
	echo "    filtering"
	echo "    mapping"
	echo "    usage"
	echo ""
}

CreateDir(){
	directory=$1
	if [ ! -d $directory ]
	then
		mkdir -p $directory
	fi
}

dir_data=data
dir_results=.
dir_filtering=RawSequenceFiltering
dir_mapping=GenomeMapping
file_configuration=config.txt

# Parse arguments
if [ "$#" -gt 2 ]
then
	Usage
	exit
fi
dir_scripts=$1
command=$2
if [ "$command" == "" ]
then
	command="all"
fi

# Check arguments
if [ ! -d "$dir_scripts" ]
then
	echo ""
	echo "Cannot find scripts directory: $dir_scripts."
	Usage
	exit
elif [ ! -e "$file_configuration" ]
then
	echo ""
	echo "Please create a configuration file before the analysis (see: Docs/configuration_file.txt)."
	exit
elif [ ! -d "$dir_data" ]
then
	echo ""
	echo "Cannot find data directory (see: README)."
	Usage
	exit
fi

# Start the real work
echo ""
echo "Starting initialization!"
echo ""

main_makefile=Makefile
# Reset main directory's Makefile
rm -f $main_makefile

sample_count=0
for file in $(ls $dir_data)
do
	sample_count=$((sample_count+1))
	echo "Sample #$sample_count: $file"
	echo ------------------------------
	# Create the subdirectory for the current file
	targets=""
	subdirectory=$dir_results/$(basename ${file%.*})
	dir_reference_miRNA=$(grep dir_reference_miRNA $file_configuration | cut -f2 | tail -n1)
	dir_length=$subdirectory/LengthDistributionAnalysis
	dir_contribution=$subdirectory/ContributionAnalysis
	dir_novel=$subdirectory/NovelDiscovery
	rm -f $subdirectory/Makefile

	# Add the subdirectory to main Makefile
	echo SUBDIRS+=$subdirectory >> $main_makefile 

	if [ "$command" == "filtering" ] || [ "$command" == "all" ]
	then
		echo "Preparing Raw Sequence Filtering..."
		# Create the subdirectory Makefile
		CreateDir $subdirectory/$dir_filtering
		echo "DIR_SCRIPTS=$dir_scripts" > $subdirectory/Makefile

		adaptor=$(grep adaptor $file_configuration | cut -f2 | tail -n1)

		# Prepare filtering subdirectory Makefile
		echo "include filtering.mk" >> $subdirectory/Makefile
		targets+=" filtering"

		# Prepare the filtering Makefile configuration file
		echo "DIR_SCRIPTS=$dir_scripts" > $subdirectory/filtering.mk
		echo "ADAPTOR=$adaptor" >> $subdirectory/filtering.mk
		echo "FILE_DATA=../$dir_data/$file" >> $subdirectory/filtering.mk
		tail -n+5 $dir_scripts/Templates/Makefile_RawSequenceFiltering_Template >> $subdirectory/filtering.mk
	fi

	if [ "$command" == "mapping-miRNA" ] || [ "$command" == "mapping" ] || [ "$command" == "all" ]
	then
		echo "Preparing Genome Mapping to other mature miRNA database..."
		subdir_reference=$subdirectory/reference
#		mkdir -p $subdir_reference
		CreateDir $subdir_reference
		# Prepare the directory structure
#		mkdir -p $subdirectory/$dir_mapping
		CreateDir $subdirectory/$dir_mapping
		dir_reference_miRNA=$(grep dir_reference_miRNA $file_configuration | cut -f2 | tail -n1)
		reference=$(find $dir_reference_miRNA/mature* | head -n1)
		cat $reference | $dir_scripts/Utility/convertRNAfastaToDNA.py > $subdir_reference/$(basename ${reference%.*}).fasta

		# Prepare mapping subdirectory Makefile
		config_file_make=$subdirectory/mapping-miRNA.mk
		echo "include $(basename $config_file_make)" >> $subdirectory/Makefile
		targets+=" mapping-miRNA"

		# Prepare the filtering Makefile configuration file
		echo "DIR_SCRIPTS=$dir_scripts" > $config_file_make
		echo "SUBDIR+=$dir_mapping/$(basename ${reference%.*})" >> $config_file_make
		echo "FILE_FASTA_MIRNA=../../RawSequenceFiltering/"$subdirectory"_trimmed.fasta" >> $config_file_make
		echo "REFERENCE_MIRNA=../../reference/$(basename ${reference%.*}).fasta" >> $config_file_make
		tail -n+6 $dir_scripts/Templates/Makefile_GenomeMapping-miRNA_Template >> $config_file_make
	fi

	if [ "$command" == "mapping-others" ] || [ "$command" == "mapping" ] || [ "$command" == "all" ]
	then
		echo "Preparing Genome Mapping to other databases..."
		subdir_reference=$subdirectory/reference-others
		CreateDir $subdir_reference
		CreateDir $subdirectory/$dir_mapping
		dir_reference_others=$(grep dir_reference_others $file_configuration | cut -f2 | tail -n1)
		dir_reference_miRNA=$(grep dir_reference_miRNA $file_configuration | cut -f2 | tail -n1)
		file_reference_miRNA=$(ls $dir_reference_miRNA | tail -n1)
		for reference in $(find $dir_reference_others/*)
		do
			CreateDir $subdirectory/$dir_mapping/$(basename ${reference%.*})
		done

		# Prepare mapping subdirectory Makefile
		echo "include mapping-others.mk" >> $subdirectory/Makefile
		targets+=" mapping-others"

		# Prepare the filtering Makefile configuration file
		config_file_make=$subdirectory/mapping-others.mk
		echo "DIR_SCRIPTS=$dir_scripts" > $config_file_make
		for reference in $(find $dir_reference_others/* | grep '\.fa\|\.fasta')
		do
			echo "BASE_FILES_OTHER+=$(basename ${reference%.*})" >> $config_file_make
		done
		echo "DIR_FASTQ_OTHER=$(basename ${file_reference_miRNA%.*})" >> $config_file_make
		echo "DIR_SOURCE_REFERENCE_OTHER=../$dir_reference_others" >> $config_file_make
		echo "BASE_FASTQ_OTHER="$subdirectory"_trimmed_unmapped.fastq" >> $config_file_make
		echo "BASE_OUTPUT_OTHER="${file%.*} >> $config_file_make
		echo "FILE_FASTA_OTHER=RawSequenceFiltering/"$subdirectory"_trimmed.fasta" >> $config_file_make
		tail -n+9 $dir_scripts/Templates/Makefile_GenomeMapping-Others_Template >> $config_file_make
	fi
	if [ "$command" == "hairpin-alignment" ] || [ "$command" == "all" ]
	then
		echo "Preparing Hairpin Alignment..."
		dir_hairpin=$subdirectory/HairpinsAlignment
		dir_reference=$subdirectory/reference
		reference_hairpin=$(grep file_hairpin_hsapiens $file_configuration | cut -f2 | tail -n1)
		reference_mature=$(grep file_mature_hsapiens $file_configuration | cut -f2 | tail -n1)
#		reference_hairpin=$(find $dir_reference_miRNA/hairpin* | head -n1)
#		reference_mature=$(find $dir_reference_miRNA/mature* | head -n1)
		mkdir -p $dir_hairpin
		mkdir -p $dir_reference
		ln -sf ../../$reference_hairpin $dir_reference/$(basename $reference_hairpin)
		ln -sf ../../$reference_mature $dir_reference/$(basename $reference_mature)
		echo "include hairpin-alignment.mk" >> $subdirectory/Makefile
		targets+=" hairpin-alignment"
		config_file_make=$subdirectory/hairpin-alignment.mk
		echo "DIR_SCRIPTS=$dir_scripts" > $config_file_make
		echo "FILE_UNIQUE_FASTA_HAIRPIN=$dir_filtering/$(basename $(ls $subdirectory/$dir_filtering/*fasta | head -n1))" >> $config_file_make
		echo "FILE_FASTA_HAIRPIN=reference/$(basename $reference_hairpin)" >> $config_file_make
		echo "FILE_MATURE_FASTA_HAIRPIN=reference/$(basename $(find $dir_reference_miRNA/mature* | head -n1))" >> $config_file_make
		tail -n+6 $dir_scripts/Templates/Makefile_HairpinAlignment_Template >> $config_file_make
	fi
	if [ "$command" == "length-distribution" ] || [ "$command" == "all" ]
	then
		echo "Preparing Length Distribution Analysis..."
		echo "include length-distribution.mk" >> $subdirectory/Makefile
		targets+=" length-distribution"
		mkdir -p $dir_length
		config_file_make=$subdirectory/length-distribution.mk
		echo "DIR_SCRIPTS=$dir_scripts" > $config_file_make
		dir_reference_others=$(grep dir_reference_others $file_configuration | cut -f2 | tail -n1)
		file_source_fasta=$(basename $subdirectory)"_trimmed.fasta"
		for file_reference_others in $(ls $dir_reference_others)
		do
			echo "FILES_LENGTH+=${file_reference_others%.*}.fasta" >> $config_file_make
		done
		echo "FILES_LENGTH+=$file_source_fasta" >> $config_file_make
		tail -n+4 $dir_scripts/Templates/Makefile_LengthDistribution_Template >> $config_file_make
	fi
	if [ "$command" == "contribution" ] || [ "$command" == "all" ]
	then
		echo "Preparing Contribution Analysis..."
		echo "include contribution.mk" >> $subdirectory/Makefile
		targets+=" contribution"
		mkdir -p $dir_contribution
		config_file_make=$subdirectory/contribution.mk
		file_source_fasta=$(basename $subdirectory)"_trimmed.fasta"
		echo "DIR_SCRIPTS=$dir_scripts" > $config_file_make
		for file_reference_others in $(ls $dir_reference_others)
		do
			echo "FILES_CONTRIB+=${file_reference_others%.*}.fasta" >> $config_file_make
		done
		echo "FILES_CONTRIB+=$file_source_fasta" >> $config_file_make
		echo "FILE_SOURCE_FASTA_CONTRIB=$file_source_fasta" >> $config_file_make
		tail -n+5 $dir_scripts/Templates/Makefile_Contribution_Template >> $config_file_make
	fi
	if [ "$command" == "novel-discovery" ] || [ "$command" == "all" ]
	then
		echo "Preparing Novel miRNA Discovery..."
		echo "include novel-discovery.mk" >> $subdirectory/Makefile
		targets+=" novel"
		mkdir -p $dir_novel
		config_file_make=$subdirectory/novel-discovery.mk
		file_reference_genome=$(grep file_reference_genome $file_configuration | cut -f2 | tail -n1)
		file_mature_hsapiens=$(grep file_mature_hsapiens $file_configuration | cut -f2 | tail -n1)
		echo "DIR_SCRIPTS=$dir_scripts" > $config_file_make
		echo "MATCHED_ALL_FASTA_NOVEL=ContributionAnalysis/Fasta/all.fasta" >> $config_file_make
		echo "BASE_RESULTS_NOVEL=${file%.*}" >> $config_file_make
		echo "FILE_GENOME_NOVEL=../$file_reference_genome" >> $config_file_make
		echo "FILE_SOURCE_MATURE_NOVEL=../$file_mature_hsapiens" >> $config_file_make
		tail -n+7 $dir_scripts/Templates/Makefile_NovelDiscovery_Template >> $config_file_make
	fi
#DIR_SCRIPTS=...
#FILE_SUMMARY=GenomeMapping/mature_hsapiens/s3_run45_trimmed_summary.txt
	if [ "$command" == "expression-analysis" ] || [ "$command" == "all" ]
	then
		echo "Preparing Expression Analysis..."
		echo "include expression-analysis.mk" >> $subdirectory/Makefile
		targets+=" expression"
		mkdir -p $dir_novel
		config_file_make=$subdirectory/expression-analysis.mk
		echo "DIR_SCRIPTS=$dir_scripts" > $config_file_make
		echo "FILE_SUMMARY_EXPRESSION=$dir_mapping/mature_hsapiens/"$subdirectory"_trimmed_summary.txt" >> $config_file_make
		tail -n+4 $dir_scripts/Templates/Makefile_ExpressionAnalysis_Template >> $config_file_make
	fi

	# Complete the subdirectory Makefile
	echo "" >> $subdirectory/Makefile
	echo "TARGETS=$targets" >> $subdirectory/Makefile
	tail -n+4 $dir_scripts/Templates/Makefile_SubDirectories_Template >> $subdirectory/Makefile
	echo ""
done

# Complete the main makefile
echo "" >> $main_makefile
cat $dir_scripts/Templates/Makefile_MainDirectory_Template >> $main_makefile
echo "Initialization over! You can start the analysis by typing: make"
echo ""
